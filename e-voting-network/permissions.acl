/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Access control rules for org.blockchain.evoting
 */
/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample access control list.
 */


rule membersUpdateElectionCandidatesVotes {
    description: "All members are permitted to update the election's candidatesVotes parameter in voteTransaction."
    participant(r): "org.blockchain.evoting.member"
    operation: UPDATE
    resource(c): "org.blockchain.evoting.electionAsset"
    transaction(tx): "org.blockchain.evoting.voteTransaction"
    condition: (true)
    action: ALLOW
}

rule DirectorsCreateAnElection {
    description: "Only director members are permitted to hold an election"
    participant(r): "org.blockchain.evoting.member"
    operation: CREATE
    resource(c): "org.blockchain.evoting.electionAsset"
    condition:
    (r.isDirector == true &&
    r.memberId == c.directorMemberId &&
    c.endingTimestamp > c.startingTimestamp &&
    c.startingTimestamp > (Date.now() / 1000) &&
    c.candidatesNames.length > 1)
    action: ALLOW
}

rule membersUpdateVoted {
    description: "All members are permitted to update their voted parameters in voteTransaction."
    participant(r): "org.blockchain.evoting.member"
    operation: UPDATE
    resource(c): "org.blockchain.evoting.member"
    transaction(tx): "org.blockchain.evoting.voteTransaction"
    condition: (true)
    action: ALLOW
}

rule membersGetAnElection {
    description: "All members are permitted to read any election's data."
    participant(r): "org.blockchain.evoting.member"
    operation: READ
    resource(c): "org.blockchain.evoting.getElection"
    condition: (true)
    action: ALLOW
}

rule membersVote {
    description: "All members are permitted to vote once in every election."
    participant(r): "org.blockchain.evoting.member"
    operation: CREATE
    resource(c): "org.blockchain.evoting.voteTransaction"
    condition: (true)
    action: ALLOW
}

rule EverybodyCanReadEverything {
    description: "Allow all participants read access to all resources"
    participant: "org.blockchain.evoting.member"
    operation: READ
    resource: "org.blockchain.evoting.*"
    action: ALLOW
}

rule SystemACL {
    description: "System ACL to permit all access"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}
